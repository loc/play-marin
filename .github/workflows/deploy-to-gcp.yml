# This is a basic workflow to help you get started with Actions

name: Deploy to GCP

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.GCP_SSH_KEY }}
          known_hosts: ${{ secrets.GCP_KNOWN_HOSTS }}
          
#       - name: Try SSH
#         run: ssh ${{ secrets.GCP_SSH_HOST }} pwd
        
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build
        env:
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
             docker-compose build
             docker-compose push
             
      - name: Deploy
        env:
          DOCKER_HOST: ssh://${{ secrets.GCP_SSH_HOST }}
        run: |
             docker stack rm frontend
             sleep 10
             docker stack deploy --compose-file docker-compose.yml --with-registry-auth frontend
             

